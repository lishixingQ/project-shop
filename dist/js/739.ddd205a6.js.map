{"version":3,"file":"js/739.ddd205a6.js","mappings":"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","sources":["webpack://project-shop/./src/components/goods/Params.vue","webpack://project-shop/src/components/goods/Params.vue","webpack://project-shop/./src/components/goods/Params.vue?9d53","webpack://project-shop/./src/components/goods/Params.vue?9d3d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"分类参数\")])],1),_c('el-card',{staticClass:\"box-card\"},[_c('el-alert',{attrs:{\"title\":\"注意！只允许为第三级分类设置相关参数！\",\"type\":\"warning\",\"show-icon\":\"\"}}),_c('el-row',[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"options\":_vm.cateList,\"props\":_vm.cateListProps},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabsClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isParamsBtnShow},on:{\"click\":function($event){_vm.addDialog = true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyDataList,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,index){return _c('el-tag',{key:index,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClosed(index, scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"attr_name\",\"label\":\"参数名称\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.editParams(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isParamsBtnShow},on:{\"click\":function($event){_vm.addDialog = true}}},[_vm._v(\"添加属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyDataList,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,index){return _c('el-tag',{key:index,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClosed(index, scope.row)}}},[_vm._v(_vm._s(item))])}),(scope.row.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.handleInputConfirm(scope.row)}},model:{value:(scope.row.inputValue),callback:function ($$v) {_vm.$set(scope.row, \"inputValue\", $$v)},expression:\"scope.row.inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"prop\":\"attr_name\",\"label\":\"属性名称\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.editParams(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.deleteParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialog,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.addDialog=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addParamsRef\",attrs:{\"model\":_vm.addParamsForm,\"rules\":_vm.addParamsRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addParamsForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addParamsForm, \"attr_name\", $$v)},expression:\"addParamsForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialog = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirmAddParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.editDialog,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.editDialog=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editParamsRef\",attrs:{\"model\":_vm.editParamsForm,\"rules\":_vm.editParamsRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editParamsForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editParamsForm, \"attr_name\", $$v)},expression:\"editParamsForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialog = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirmeditParams}},[_vm._v(\"确 定\")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div>\r\n        <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n            <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n            <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n            <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n        </el-breadcrumb>\r\n\r\n        <!-- 卡片视图区域 -->\r\n        <el-card class=\"box-card\">\r\n            <!-- 头部警告提示 -->\r\n            <el-alert title=\"注意！只允许为第三级分类设置相关参数！\" type=\"warning\" show-icon>\r\n            </el-alert>\r\n\r\n            <el-row>\r\n                <el-col>\r\n                    <span>选择商品分类：</span>\r\n                    <!-- 商品分类的级联选择框 -->\r\n                    <el-cascader v-model=\"selectedKeys\" :options=\"cateList\" :props=\"cateListProps\"\r\n                        @change=\"handleChange\"></el-cascader>\r\n                </el-col>\r\n            </el-row>\r\n\r\n            <!-- tabs切换 -->\r\n            <el-tabs v-model=\"activeName\" @tab-click=\"handleTabsClick\">\r\n                <el-tab-pane label=\"动态参数\" name=\"many\">\r\n                    <!-- 动态参数按钮 -->\r\n                    <el-button type=\"primary\" size=\"mini\" :disabled=\"isParamsBtnShow\"\r\n                        @click=\"addDialog = true\">添加参数</el-button>\r\n                    <!-- 动态参数表格渲染 -->\r\n                    <el-table :data=\"manyDataList\" border stripe>\r\n                        <!-- 展开列 -->\r\n                        <el-table-column type=\"expand\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-tag v-for=\"(item, index) in scope.row.attr_vals\" :key=\"index\" closable\r\n                                    @close=\"handleClosed(index, scope.row)\">{{ item\r\n                                    }}</el-tag>\r\n\r\n                                <!-- 添加tags -->\r\n                                <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\" v-model=\"scope.row.inputValue\"\r\n                                    ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                                    @blur=\"handleInputConfirm(scope.row)\">\r\n                                </el-input>\r\n                                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New\r\n                                    Tag</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <!-- 索引列 -->\r\n                        <el-table-column type=\"index\"></el-table-column>\r\n                        <el-table-column prop=\"attr_name\" label=\"参数名称\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"操作\">\r\n                            <template slot-scope=\"scope\">\r\n                                <!-- 编辑按钮 -->\r\n                                <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\r\n                                    @click=\"editParams(scope.row.attr_id)\">编辑</el-button>\r\n                                <!-- 删除按钮 -->\r\n                                <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                                    @click=\"deleteParams(scope.row.attr_id)\">删除</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"静态属性\" name=\"only\">\r\n                    <!-- 静态属性按钮 -->\r\n                    <el-button type=\"primary\" size=\"mini\" :disabled=\"isParamsBtnShow\"\r\n                        @click=\"addDialog = true\">添加属性</el-button>\r\n                    <!-- 静态属性表格渲染 -->\r\n                    <el-table :data=\"onlyDataList\" border stripe>\r\n                        <!-- 展开列 -->\r\n                        <el-table-column type=\"expand\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-tag v-for=\"(item, index) in scope.row.attr_vals\" :key=\"index\" closable\r\n                                    @close=\"handleClosed(index, scope.row)\">{{ item\r\n                                    }}</el-tag>\r\n\r\n                                <!-- 添加tags -->\r\n                                <el-input class=\"input-new-tag\" v-if=\"scope.row.inputVisible\" v-model=\"scope.row.inputValue\"\r\n                                    ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm(scope.row)\"\r\n                                    @blur=\"handleInputConfirm(scope.row)\">\r\n                                </el-input>\r\n                                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New\r\n                                    Tag</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <!-- 索引列 -->\r\n                        <el-table-column type=\"index\"></el-table-column>\r\n                        <el-table-column prop=\"attr_name\" label=\"属性名称\">\r\n                        </el-table-column>\r\n                        <el-table-column label=\"操作\">\r\n                            <template slot-scope=\"scope\">\r\n                                <!-- 编辑按钮 -->\r\n                                <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\r\n                                    @click=\"editParams(scope.row.attr_id)\">编辑</el-button>\r\n                                <!-- 删除按钮 -->\r\n                                <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\r\n                                    @click=\"deleteParams(scope.row.attr_id)\">删除</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n        </el-card>\r\n\r\n        <!-- 添加参数消息对话框 -->\r\n        <el-dialog :title=\"'添加' + titleText\" :visible.sync=\"addDialog\" width=\"30%\" @close=\"addDialogClosed\">\r\n            <el-form :model=\"addParamsForm\" :rules=\"addParamsRules\" ref=\"addParamsRef\" label-width=\"100px\">\r\n                <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n                    <el-input v-model=\"addParamsForm.attr_name\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"addDialog = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"confirmAddParams\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n\r\n        <!-- 修改参数消息对话框 -->\r\n        <el-dialog :title=\"'添加' + titleText\" :visible.sync=\"editDialog\" width=\"30%\" @close=\"editDialogClosed\">\r\n            <el-form :model=\"editParamsForm\" :rules=\"editParamsRules\" ref=\"editParamsRef\" label-width=\"100px\">\r\n                <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n                    <el-input v-model=\"editParamsForm.attr_name\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <span slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"editDialog = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"confirmeditParams\">确 定</el-button>\r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            // 级联选择器数据源\r\n            cateList: [],\r\n            // 级联选择器配置项\r\n            cateListProps: {\r\n                expandTrigger: 'hover',\r\n                value: 'cat_id',\r\n                label: 'cat_name',\r\n                children: 'children'\r\n            },\r\n            // 级联选择器选中的id数组\r\n            selectedKeys: [],\r\n            // 选中的tabs标签名\r\n            activeName: 'many',\r\n            // 动态参数列表\r\n            manyDataList: [\r\n\r\n            ],\r\n            // 静态参数列表\r\n            onlyDataList: [],\r\n            // 添加消息对话框的显示与隐藏\r\n            addDialog: false,\r\n            // 添加参数表单数据\r\n            addParamsForm: {},\r\n            // 添加参数表单验证规则\r\n            addParamsRules: {\r\n                attr_name: [\r\n                    { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n                ]\r\n            },\r\n            // 修改参数的消息对话框的显示与隐藏\r\n            editDialog: false,\r\n            // 修改参数的表单数据\r\n            editParamsForm: {},\r\n            // 修改参数的表单验证规则\r\n            editParamsRules: {\r\n                attr_name: [\r\n                    { required: true, message: '请输入参数名称', trigger: 'blur' },\r\n                ]\r\n            },\r\n        };\r\n    },\r\n    methods: {\r\n        // 获取商品分类数据\r\n        async getCateList() {\r\n            const { data: result } = await this.$axios.get('categories')\r\n            if (result.meta.status != 200) {\r\n                return this.$message.error('获取商品分类列表失败！')\r\n            }\r\n            this.cateList = result.data\r\n            // console.log(this.cateList);\r\n        },\r\n        // 监听级联选择器变化，变化时触发\r\n        handleChange() {\r\n            // console.log(this.selectedKeys);\r\n            this.getParamsDataList()\r\n        },\r\n        // 点击tabs标签触发\r\n        handleTabsClick() {\r\n            // console.log(this.activeName);\r\n            this.getParamsDataList()\r\n        },\r\n        // 获取参数列表数据\r\n        async getParamsDataList() {\r\n            if (this.selectedKeys.length !== 3) {\r\n                this.selectedKeys = []\r\n                return\r\n            }\r\n\r\n            const { data: result } = await this.$axios.get(`categories/${this.paramsId}/attributes`, { params: { sel: this.activeName } })\r\n\r\n            // console.log(result.data);\r\n            if (result.meta.status != 200) {\r\n                return this.$message.error('获取参数失败！')\r\n            }\r\n\r\n            result.data.forEach(item => {\r\n                item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n                item.inputVisible = false\r\n                item.inputValue = ''\r\n            });\r\n\r\n            // console.log(result.data);\r\n\r\n            if (this.activeName == 'many') {\r\n                this.manyDataList = result.data\r\n            } else if (this.activeName == 'only') {\r\n                this.onlyDataList = result.data\r\n            }\r\n        },\r\n        // 确定添加参数\r\n        confirmAddParams() {\r\n            this.$refs.addParamsRef.validate(async valid => {\r\n                if (!valid) return this.$message.error('请输入正确的参数名称！')\r\n\r\n                const { data: result } = await this.$axios.post(`categories/${this.paramsId}/attributes`, {\r\n                    attr_name: this.addParamsForm.attr_name,\r\n                    attr_sel: this.activeName\r\n                })\r\n\r\n                console.log(result);\r\n                if (result.meta.status != 201) {\r\n                    return this.$message.error('添加参数失败！')\r\n                }\r\n\r\n                this.$message.success('添加参数成功！')\r\n                this.getParamsDataList()\r\n                this.addDialog = false\r\n            })\r\n        },\r\n        // 添加参数的对话框关闭时的回调\r\n        addDialogClosed() {\r\n            this.$refs.addParamsRef.resetFields();\r\n        },\r\n        // 修改参数的对话框关闭时的回调\r\n        editDialogClosed() {\r\n            this.$refs.editParamsRef.resetFields();\r\n        },\r\n        // 编辑（修改）参数消息对话框显示\r\n        async editParams(attrId) {\r\n            const { data: result } = await this.$axios.get(`categories/${this.paramsId}/attributes/${attrId}`, {\r\n                params: { attr_sel: this.activeName }\r\n            })\r\n            // console.log(result);\r\n            if (result.meta.status != 200) {\r\n                return this.$message.error('获取参数失败!')\r\n            }\r\n\r\n            this.editParamsForm = result.data\r\n            this.editDialog = true\r\n        },\r\n        // 确定修改参数\r\n        confirmeditParams() {\r\n            this.$refs.editParamsRef.validate(async valid => {\r\n                if (!valid) {\r\n                    return this.$message.error('请输入正确的参数名称')\r\n                }\r\n\r\n                const { data: result } = await this.$axios.put(`categories/${this.paramsId}/attributes/${this.editParamsForm.attr_id}`, {\r\n                    attr_name: this.editParamsForm.attr_name,\r\n                    attr_sel: this.activeName\r\n                })\r\n\r\n                if (result.meta.status != 200) {\r\n                    return this.$message.error('修改参数失败!')\r\n                }\r\n\r\n                this.$message.success('修改参数成功!')\r\n                this.getParamsDataList()\r\n                this.editDialog = false\r\n            })\r\n        },\r\n        // 删除参数\r\n        async deleteParams(attrId) {\r\n            const confirmResult = await this.$confirm('此操作将永久删除该文件, 是否继续?', '提示', {\r\n                confirmButtonText: '确定',\r\n                cancelButtonText: '取消',\r\n                type: 'warning'\r\n            }).catch(error => error)\r\n\r\n            // console.log(confirmResult);\r\n            if (confirmResult == 'confirm') {\r\n                const { data: result } = await this.$axios.delete(`categories/${this.paramsId}/attributes/${attrId}`)\r\n                if (result.meta.status != 200) {\r\n                    return this.$message.error('删除参数失败!')\r\n                }\r\n                this.$message.success('删除参数成功!')\r\n                this.getParamsDataList()\r\n            } else {\r\n                this.$message('已取消删除!')\r\n            }\r\n        },\r\n        // input框失去焦点 按键按下enter的时候触发\r\n        handleInputConfirm(scope) {\r\n            // 如果input框中除去空格为空值时 return\r\n            if (scope.inputValue.trim().length === 0) {\r\n                scope.inputValue = ''\r\n                scope.inputVisible = false\r\n                return\r\n            }\r\n            scope.attr_vals.push(scope.inputValue.trim())\r\n            scope.inputValue = ''\r\n            scope.inputVisible = false\r\n            // 反之向数据库请求保存并添加参数\r\n            this.saveParams(scope)\r\n        },\r\n        // 向数据库请求参数&将保存到数据库\r\n        async saveParams(scope) {\r\n\r\n            const { data: result } = await this.$axios.put(`categories/${this.paramsId}/attributes/${scope.attr_id}`, {\r\n                attr_name: scope.attr_name,\r\n                attr_sel: scope.attr_sel,\r\n                attr_vals: scope.attr_vals.join(' ')\r\n            })\r\n\r\n            if (result.meta.status != 200) {\r\n                return this.$message.error('修改参数失败!')\r\n            }\r\n\r\n            this.$message.success('修改参数成功!')\r\n        },\r\n        // 点击按钮时input显示\r\n        showInput(scope) {\r\n            scope.inputVisible = true\r\n            this.$nextTick(_ => {\r\n                this.$refs.saveTagInput.$refs.input.focus();\r\n            });\r\n        },\r\n        // 删除tags标签\r\n        handleClosed(index, scope) {\r\n            scope.attr_vals.splice(index, 1)\r\n            this.saveParams(scope)\r\n        }\r\n\r\n    },\r\n    mounted() {\r\n        this.getCateList()\r\n    },\r\n    computed: {\r\n        // 添加参数&添加属性按钮是否显示\r\n        isParamsBtnShow() {\r\n            if (this.selectedKeys.length === 3) {\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        },\r\n        // 分类的id\r\n        paramsId() {\r\n            if (this.selectedKeys.length === 3) {\r\n                return this.selectedKeys[2]\r\n            } else {\r\n                return null\r\n            }\r\n        },\r\n        // 消息对话框提示\r\n        titleText() {\r\n            if (this.activeName == 'many') {\r\n                return \"动态参数\"\r\n            } else {\r\n                return \"静态属性\"\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n\r\n    },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.el-row {\r\n    margin: 15px 0;\r\n}\r\n\r\n.el-tag {\r\n    margin: 10px;\r\n}\r\n\r\n.input-new-tag {\r\n    width: 120px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=3d8d27d5&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=3d8d27d5&prod&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3d8d27d5\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","attrs","path","_v","staticClass","cateList","cateListProps","on","handleChange","model","value","selectedKeys","callback","$$v","expression","handleTabsClick","activeName","isParamsBtnShow","$event","addDialog","manyDataList","scopedSlots","_u","key","fn","scope","_l","row","attr_vals","item","index","handleClosed","_s","inputVisible","ref","handleInputConfirm","nativeOn","type","indexOf","_k","keyCode","inputValue","$set","showInput","editParams","attr_id","deleteParams","onlyDataList","titleText","addDialogClosed","addParamsForm","addParamsRules","attr_name","slot","confirmAddParams","editDialog","editDialogClosed","editParamsForm","editParamsRules","confirmeditParams","staticRenderFns","props","data","expandTrigger","label","children","required","message","trigger","methods","result","$axios","get","meta","status","$message","error","getParamsDataList","length","paramsId","params","sel","forEach","split","$refs","addParamsRef","validate","valid","post","attr_sel","console","log","success","resetFields","editParamsRef","attrId","put","confirmResult","$confirm","confirmButtonText","cancelButtonText","catch","delete","trim","push","saveParams","join","$nextTick","_","saveTagInput","input","focus","splice","mounted","getCateList","computed","components","component"],"sourceRoot":""}